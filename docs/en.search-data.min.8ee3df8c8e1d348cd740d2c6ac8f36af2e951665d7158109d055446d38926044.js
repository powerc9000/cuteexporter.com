'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href','section'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/docs/docs/basics/creating-a-project/','title':"Creating a project",'section':"Getting Started",'content':"Creating a Project #  On the landing page of Cute Exporter, click Create Project.\nChoose where you would like to save your project file. The same folder as your raw PSD or Asesprite assets is a good place. By default it will be named assets.db but you can name it whatever you want.\nThe project file can be saved anywhere but all the assets you add to your project will be referenced relative to where your project file is saved.\n The project file is an sqlite database file. You can read more about that here.  Next Up Adding Files\n"});index.add({'id':1,'href':'/docs/docs/basics/adding-files/','title':"Adding files",'section':"Getting Started",'content':"Adding Files to your project #  After creating a project you should add some files to it. Supported files types are:\n Photoshop files (.psd) Aseprite files (.ase or .aseprite) PNG (.png) JPEG (.jpeg)  To add a file either go to your your project main page and cick Add File. Or on the sidebar you will see a Add new file... button.\nIf you aren\u0026rsquo;t on your homepage click on the Files button on the left sidebar  Alternatively, on your project main page, you can drag and drop and supported file type into the Cute Exporter window.\nYour project can contain any mix of file types. Cute Exporter will export them all into a single texture atlas.\nNext up: Previewing Your Texture Atlas\n"});index.add({'id':2,'href':'/docs/docs/basics/previewing-texture-atlas/','title':"Previewing Your Texture Atlas",'section':"Getting Started",'content':"Previewing Your Texture Atlas #  You can preview what the resulting texture atlas of your project will look like at any time by clicking the Preview button on the top row of the app.\nThis preview will open a modal that display what your resulting texture atlas will look like when exported.\nThe preview is not to scale. You can see the final output size on the left side of the preview modal.  Up Next: Exporting\n"});index.add({'id':3,'href':'/docs/docs/basics/exporting-basics/','title':"Exporting your project",'section':"Getting Started",'content':"Exporting Your Project #  At some point you\u0026rsquo;ll want to actually export your project to a texture atlas. Just hit the export button in the top menu.\nCute Exporter also has a CLI that you can use to export your images from the command line.  This will bring up a modal that will show you the progress of the export.\nThe exported files #  By default the exported files will be saved to the same folder your project file is in. By default the files will be names assets.png and assets.json. You can manage all of these properties in the settings.  The exported png file should now contain all the layers in your project. The exported JSON will contain info about each exported layer and animations.\nJSON data file #  The overall format of the JSON file will be something like this:\n\t{ \u0026quot;assets\u0026quot;: [ { \u0026quot;id\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;folder\u0026quot;, \u0026quot;parentPath\u0026quot;: \u0026quot;raw/icons.psd\u0026quot;, \u0026quot;width\u0026quot;: 173, \u0026quot;height\u0026quot;: 128, \u0026quot;x\u0026quot;: 899, \u0026quot;y\u0026quot;: 610, \u0026quot;layerPos\u0026quot;: { \u0026quot;x\u0026quot;: 0, \u0026quot;y\u0026quot;: 0 }, \u0026quot;tags\u0026quot;: [], \u0026quot;animationName\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;animationId\u0026quot;: 0, \u0026quot;frameNumber\u0026quot;: -1 }], \u0026quot;animations\u0026quot;: [ { \u0026quot;name\u0026quot;: \u0026quot;walk\u0026quot;, \u0026quot;id\u0026quot;: 10, \u0026quot;frames\u0026quot;: [ 29,30 ], \u0026quot;totalFrames\u0026quot;: 2 }, ], \u0026quot;image\u0026quot;: \u0026quot;sprites.png\u0026quot; } Assets section #   The assets section is an array of each layer from each file in your project.\nid #  Unique id for each layer that is consistent across runs of the exporter. You can feel free to reference this id in your game engine of choice.\nname #  The name you gave the layer in the Gui.\nparentPath #  The relative path of the parent raw asset in the project.\nwidth, height #  Width and height of the layer in the PNG atlas\nx,y #  The x and y pixel coordinate of the top left corner of the layer in the PNG atlas.\nlayerPos #  The original position of this layer/cel in the parent asset. If you decide to trim alpha around your layer this can help you place it again relative to siblings.\nIf you are exporting Aseprite files this setting can be useful in lining up the head with the body etc in an asset.  tags #  User defined tags for the layer.\nanimationName #  The animation this layer belongs to. If any.\nanimationId #  The id of the animation this layer belongs to. If any.\nframeNumber #  The frame number of this layer in the animation. -1 if the layer does not belong to any animation.\nAnimations #   Cute Exporter supports exporting info about animations. Currently it only exports info about frames in Aseprite files. This process is automatic.\nname #  The name of the animation. Taken from the tag name in Aseprite.\nid #  The id of the animation. Because of the way Aseprite animations are automatically exported this id is not necessarily consistent across runs of the exporter but should be mostly reliable. The id is based off of the parent asset id and the index of the tag in the Aseprite file. If you don\u0026rsquo;t change the order of your tags this id should remain reliable.  frames #  The ids of the layers in this animation.\nIf multiple layers belong to the same frame it will be a multidimensional array with each sub array containing all the layers for that frame.  manyAssetsPerFrame #  Set to true if there are multiple layers that belong to each frame in this animation.\ntotalFrames #  Total number of frames in this animation.\n"});index.add({'id':5,'href':'/docs/docs/settings/','title':"Project Settings",'section':"Docs",'content':"Project Settings #  There are some configurable settings for the app. You can change the settings on the right hand sidebar. Output Directory #  This is the folder your final exported assets will output to.\nIt is saved relative to the folder your project file is saved in.\nBy default the output directory will be the same folder your project is saved in.\nClick on the folder icon to change the output directory.\nOutput Name #  This is the name of the output file your texture and JSON files will be saved as. It will be saved to the output directory. Changing this value will change the name for the PNG and JSON file.\nBy default the name of these files is assets\nUse Cache #  By default Cute Exporter caches individual PNG files into a folder named cache. This folder is in the same folder as your project file. If you have many files in your project the cache should increase the speed of re-exports because only the files that have changed since the last export will need to be read.\nIf you want all your layers as individual PSDs, you can also look into the cache folder for them. They are named by their asset id. i.e \u0026lt;asset_id\u0026gt;.png. This will be configurable in the future.\nIf you don\u0026rsquo;t want to cache any files at all uncheck this box.\nIf you want a full clean re-export. Delete this folder. It will be remade.\nTrim Alpha #  Cute Exporter can trim the extra alpha around your layers. This will lead to your texture atlas being more compact. There are some cases where you may not want this behavior and can uncheck this box.\nAdvanced Settings #  There are settings that may not be useful for some use cases but can really help with certain workflows.\nCustom Template Script #  If you want to output your data differently or in a different format other than json. You can specify your own Lua script to run to have total control over the output.\nTo start click Advanced Settings make sure to check the box Use a custom Lua script. You can then select a Lua file that will be run.\nLua script specification #  After the texture has been packed and all the export metadata is known Cute Exporter will call your script. Cute Exporter looks for a function called onExport in your Lua script. Cute Exporter will pass a data structure containing all the data that would be exported to json. The data will be a Lua table with the exact same names and layout as the default json output.\nThe doExport function should return a string. The returned string will be directly saved to the output data file.\nThe Lua script has full access and power to do anything Lua can do. Cute Exporter uses a Lua script internally by default to export to json.  Custom file extension #  When you export your own custom format you likely want to have a custom file extension rather than .json. You can specify your own file extension that Cute Exporter should use in your custom export script. Supply a global variable named outputFileExt. The file extension should not start with a period (.).\nWhen you set a custom file extension in your Lua script it will show up in the settings sidebar.\nFull Example #  This is a simple full example that will simply save \u0026ldquo;hello!\u0026rdquo; to the output data file and uses the custom file extension custom outputFileExt = \u0026#34;custom\u0026#34; function doExport(data) return \u0026#34;hello!\u0026#34; end\n"});index.add({'id':6,'href':'/docs/docs/assets/','title':"Assets",'section':"Docs",'content':"Assets #  Assets are your PNG, PSD, Aseprite files. Sometimes referred to as Raw Assets as well.\nThe list of assets in your project is on the left hand sidebar.\nEach asset also has an icon denoting the file its file type.\nRefreshing an asset #  If you edit your asset while Cute Exporter is open. You can refresh Cute Exporter to show the new changes. Click the Refresh icon in the top right of the asset detail view.\nRemoving an asset #  You can remove an asset from your project. Click the trash can icon in the top right of the asset detail view. A confirmation modal will pop up. Click Remove File to confirm and remove the file from your project.\nThis action will NOT delete the file on disk. IT only removes it from the list of assets in your project.  Asset Settings #  You can view these settings in the GUI just above the list of layers in the asset\nName #  Name of the Asset. Not currently exported into the JSON file useful for your own reference\nDefault Layer Output Size #  The output size is the size the exporter will resize your layers to when placing them into the texture atlas. Setting this value will apply the same resizing to each layer in the asset if that layer does not have an output size set on it already.\nOutput size can be defined in a few different way.s\n A percentage e.g. 75%. Width and height e.g 200x300. Just width or just height this will preserve aspect ratio  Examples: x200 will make the height 200px and the width will be resized to the correct aspect. 200x will make the width 200px and the height will be resized to the correct aspect.    File specific asset settings. #  Different file types have additional settings.\nAseprite #  Merge layers #  This checkbox will set if all the layers in a frame (Aseprite calls this a cel) should be merged into a single image. If unchecked each cel in each frame will be output as an individual image.\nMerged Layers #  Non-Merged Layers #  Layers #  Below the information about the asset is a list of its layers. You can show the layers in a grid or list view. (A PNG or ASE merged layers asset only show a single layer.)\nRead more on individual layers here.\nGrid View #  List View #  In list view you can hover over a layer preview image to see it larger.\n"});index.add({'id':8,'href':'/docs/docs/assets/layers/','title':"Layers",'section':"Assets",'content':"Layers #  Assets can have one or more children (Generically called layers). Layers are what get transformed and output into your texture atlas.\nEditing layer data and settings #  You can edit the data and settings for your layer by finding it in the layer list of your asset and clicking edit\nLayer Active #  The active checkbox sets if the layer should be saved to the final output or not. If a layer you expect to show up isn\u0026rsquo;t in your atlas check that the layer is marked as active.\nLayer Name #  You can name your layers whatever you like. This name is exported as \u0026quot;name\u0026quot; in the json file.\nLayer Tags #  You can give your layers an unlimited number of tags. Tags are a list of string values.\nYou may want to use tags for finding assets in your game engine. You can tag enemies with the tag enemy etc.  Layer Export #  When you export your project, each active layer image is saved to the texture atlas and an entry for that layer is put in the output json file.\nJSON example #  In the output json file there is an array of assets each active layer is listed there.\n{ \u0026quot;id\u0026quot;:\u0026quot;1\u0026quot;, \u0026quot;name\u0026quot;:\u0026quot;folder\u0026quot;, \u0026quot;parentPath\u0026quot;:\u0026quot;raw/icons.psd\u0026quot;, \u0026quot;width\u0026quot;:173, \u0026quot;height\u0026quot;:128, \u0026quot;x\u0026quot;:191, \u0026quot;y\u0026quot;:623, \u0026quot;layerPos\u0026quot;:{ \u0026quot;x\u0026quot;:0, \u0026quot;y\u0026quot;:0, \u0026quot;width\u0026quot;:0, \u0026quot;height\u0026quot;:0 }, \u0026quot;tags\u0026quot;:[ ], \u0026quot;animationName\u0026quot;:\u0026quot;\u0026quot;, \u0026quot;animationId\u0026quot;:0, \u0026quot;frameNumber\u0026quot;:-1 } You can read about each section in the entry here.\n"});})();